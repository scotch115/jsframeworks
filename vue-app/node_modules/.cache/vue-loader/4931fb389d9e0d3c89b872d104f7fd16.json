{"remainingRequest":"/Users/jordangamache/Desktop/Projects/Website/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jordangamache/Desktop/Projects/Website/vue-app/src/App.vue?vue&type=template&id=28ae6b0c&","dependencies":[{"path":"/Users/jordangamache/Desktop/Projects/Website/vue-app/src/App.vue","mtime":1594084112249},{"path":"/Users/jordangamache/Desktop/Projects/Website/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jordangamache/Desktop/Projects/Website/vue-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jordangamache/Desktop/Projects/Website/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jordangamache/Desktop/Projects/Website/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}