{"remainingRequest":"/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/src/App.vue","mtime":1594106547771},{"path":"/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jordangamache/Desktop/Projects/Website/JS_Frameworks/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBpZD0iYXBwIj4KICAgIDxkaXYgY2xhc3M9IkFwcCIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IHJnYigyNDEsIDI0MSwgMjQxKSI+CgkJCQk8c2VjdGlvbiBjbGFzcz0iaGVybyBpcy1sYXJnZSI+CgkJCSAgPGRpdiBjbGFzcz0iaGVyby1oZWFkIiAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IHdoaXRlIj4KCQkJICA8aGVhZGVyIGNsYXNzPSJuYXZiYXIiIHN0eWxlPSJoZWlnaHQ6IDIwcHgsIHBvc2l0aW9uOiBzdGF0aWMsIHJpZ2h0OiAxMHB4Ij4KCQkJICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItYnJhbmQiPgoJCQkgICAgICAgICAgPGRpdiByb2xlPSJidXR0b24iIGNsYXNzPSJuYXZiYXItYnVyZ2VyIiBkYXRhLXRhcmdldD0ibmF2TWVudSIgYXJpYS1sYWJlbD0ibWVudSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGlzLWFjdGl2ZT0iZmFsc2UiPgoJCQkgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPgoJCQkgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPgoJCQkgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9zcGFuPgoJCQkgICAgICAgICAgPC9kaXY+CgkJCSAgICAgICAgPC9kaXY+CgkJCSAgICAgICAgPGRpdiBpZD0ibmF2TWVudSIgY2xhc3M9Im5hdmJhci1tZW51Ij4KCQkJICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1lbmQiPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJuYXZiYXItaXRlbSI+CgkJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ1dHRvbiBpcy1kYW5nZXIgbW9kYWwtYnV0dG9uIiBkYXRhLXRhcmdldD0ibW9kYWwtc3RhY2siIGFyaWEtaGFzcG9wdXA9InRydWUiPgoJCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbiI+CgkJCQkJCQkJCQk8aSBjbGFzcz0iZmFiIGZhLXJlYWN0IiA+PC9pPgoJCQkJCQkJCQkJPC9zcGFuPgoJCQkJCQkJCQkJPHNwYW4gPlN0YWNrPC9zcGFuPgoJCQkJCQkJCQk8L2J1dHRvbj4KCQkJCQkJCQk8L3NwYW4+CgkJCSAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuYXZiYXItaXRlbSI+CgkJCSAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBpcy1zdWNjZXNzIiBocmVmPSJmaWxlcy9Kb3JkYW5HYW1hY2hlUmVzdW1lLnBkZiIgZG93bmxvYWQ+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Imljb24iPgoJCQkJCQkJCQkJCQk8aSBjbGFzcz0iZmEgZmEtZmlsZSI+PC9pPgoJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkJCQk8c3Bhbj5SZXN1bWU8L3NwYW4+CgkJCSAgICAgICAgICAgICAgPC9hPgoJCQkgICAgICAgICAgICA8L3NwYW4+CgkJCQkJCQkJCTxzcGFuIGNsYXNzPSJuYXZiYXItaXRlbSI+CgkJCQkJCQkJCQk8YSBjbGFzcz0iYnV0dG9uIGlzLWxpbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9qb3JkYW4tZ2FtYWNoZS0zNzQ0MTcxNjUiPgoJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uIj4KCQkJCQkJCQkJCQkJPGkgY2xhc3M9ImZhIGZhLWxpbmtlZGluIiA+PC9pPgoJCQkJCQkJCQkJCTwvc3Bhbj4KCQkJCQkJCQkJCQk8c3Bhbj5MaW5rZWRJbjwvc3Bhbj4KCQkJCQkJCQkJCTwvYT4KCQkJCQkJCQkJPC9zcGFuPgoJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmF2YmFyLWl0ZW0iPgoJCQkgICAgICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24gaXMtYmxhY2siIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9zY290Y2gxMTUiPgoJCQkgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24iPgoJCQkgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZ2l0aHViIj48L2k+CgkJCSAgICAgICAgICAgICAgICA8L3NwYW4+CgkJCQkJCQkJCQkJPHNwYW4+R2l0SHViPC9zcGFuPgoJCQkgICAgICAgICAgICAgIDwvYT4KCQkJICAgICAgICAgICAgPC9zcGFuPgoJCQkgICAgICAgICAgPC9kaXY+CgkJCSAgICAgICAgPC9kaXY+CgkJCSAgICAgIDwvZGl2PgoJCQkgICAgPC9oZWFkZXI+CgkJCSAgIDwvZGl2PgoJCQkJIDxkaXYgY2xhc3M9Im1vZGFsIiBpZD0ibW9kYWwtc3RhY2siPgoJCQkJIAk8ZGl2IGNsYXNzPSJtb2RhbC1iYWNrZ3JvdW5kIj48L2Rpdj4KCQkJCQk8ZGl2IGNsYXNzPSJtb2RhbC1jYXJkIj4KCQkJCQkJPGhlYWRlciBjbGFzcz0ibW9kYWwtY2FyZC1oZWFkIj4KCQkJCQkJCTxwIGNsYXNzPSJtb2RhbC1jYXJkLXRpdGxlIj5GRVJOIFN0YWNrPC9wPgoJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iZGVsZXRlIiBhcmlhLWxhYmVsPSJjbG9zZSIgZGF0YS10YXJnZXQ9Im1vZGFsLXN0YWNrIj48L2J1dHRvbj4KCQkJCQkJPC9oZWFkZXI+CgkJCQkJCTxzZWN0aW9uIGNsYXNzPSJtb2RhbC1jYXJkLWJvZHkiPgoJCQkJCQkJPHAgY2xhc3M9InRpdGxlIj5UaGlzIHdlYnNpdGUgaXMgYnVpbHQgb24gdGhlIEZFUk4gc3RhY2suPC9wPgoJCQkJCQkJPHA+IEZFUk4gaXMgYW4gYWNyb255bSBmb3IgYSBGdWxsIFN0YWNrIChvciBhbGwgaW5jbHVzaXZlKSBtZXRob2Qgb2Ygd2ViIGRldmVsb3BtZW50LiBJbiBwYXJ0aWN1bGFyLCB0aGUgRkVSTiBzdGFjayBpbmNvcnBvcmF0ZXMgc29tZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGZyYW1ld29ya3MgYW5kIHRvb2xzIHRvIGFjY29tcGFueSB0cmFkaXRpb25hbCB3ZWIgZGV2ZWxvcG1lbnQgdGVjaG5pcXVlcy4gRkVSTiB1c2VzIEZpcmViYXNlLCBFeHByZXNzLmpzLCBSZWFjdC5qcywgYW5kIE5vZGUuanMuIFRoZXNlIGFsbG93IHRoZSBzaXRlIHRvIGJlIGZsZXhpYmxlLCByZXNwb25zaXZlLCBsaWdodHdlaWdodCwgYW5kIHlldCBzdGlsbCBwb3dlcmZ1bCBhbmQgcHJlY2lzZS4gVGhlIEZFUk4gc3RhY2sgaXMgbXkgcGVyc29uYWwgZmF2b3JpdGUgYW5kIG1vc3QgY29tZm9ydGFibGUgbWV0aG9kIGZvciBidWlsZGluZyBXZWIgQXBwcyBsaWtlIHRoaXMgb25lLCBob3dldmVyIEkgaGF2ZSBzb21lIGZhbWlsaWFyaXR5IHdpdGggdGhlIE1FUk4gKE1vbmdvREIvRXhwcmVzcy9SZWFjdC9Ob2RlKSBzdGFjayBhcyB3ZWxsLjwvcD4KCQkJCQkJPC9zZWN0aW9uPgoJCQkJCTwvZGl2PgoJCQkJIDwvZGl2PgoJCQkgICA8aGVhZGVyIGlkPSJoZWFkZXIiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSI+CgkJCSAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIgaGFzLXRleHQtY2VudGVyZWQiPgoJCQkgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZSI+CgkJCSAgICAgICAgPGltZyBjbGFzcz0iSkdsb2dvIiBpZD0ibG9nbyIgc3JjPSIuL2Fzc2V0cy9KR2xvZ28ucG5nIiBhbHQ9ImxvZ28iIHdpZHRoPSIxNzAiIGhlaWdodD0iMTkwIi8+CgkJCSAgICAgIDwvZGl2PgoJCQkgICAgICA8cCBjbGFzcz0ic3VidGl0bGUiIGlkPSJzdWJ0aXRsZSI+CgkJCSAgICAgICAgPHN0cm9uZz4gSm9yZGFuIEdhbWFjaGUgPC9zdHJvbmc+CgkJCSAgICAgIDwvcD4KCQkJICAgIDwvZGl2PgoJCQkgICA8L2hlYWRlcj4KCQkJCSA8ZGl2IHN0eWxlPSJoZWlnaHQ6IDEwdmgiPjwvZGl2PgoJCQkJIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgkJCSAgICA8ZGl2IGNsYXNzPSJ0aWxlIGlzLWFuY2VzdG9yIj4KCQkJICAgICAgPGRpdiBjbGFzcz0idGlsZSBpcy12ZXJ0aWNhbCBpcy02IGlzLXBhcmVudCI+CgkJCSAgICAgICAgPGFydGljbGUgY2xhc3M9InRpbGUgaXMtY2hpbGQgYm94IiBpZD0iY2FyZDEiPgoJCQkgICAgICAgIDxwIGNsYXNzPSJ0aXRsZSI+SGkgdGhlcmUhIDxzcGFuIHJvbGU9ImltZyIgYXJpYS1sYWJlbD0id2F2ZSI+8J+Ri/Cfj7s8L3NwYW4+PC9wPgoJCQkJCQkJPGltZyBzcmM9Ii4vYXNzZXRzL2hlbGxvLnBuZyIgYWx0PSJoZWxsbyIgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZSwgZmxvYXQ6IHJpZ2h0LCB0b3A6IDAsIGhlaWdodDogMjUwcHgiPgoJCQkJCQkJPHA+CgkJCSAgICAgICAgCUknbSBKb3JkYW4gR2FtYWNoZSwgYSBmcmVlbGFuY2Ugd2ViIGRldmVsb3BlciB3aXRoIGEgcGFzc2lvbiBmb3IgZnJvbnQgZW5kIFVJL1VYIGFuZCBKYXZhU2NyaXB0IGZyYW1ld29ya3MuCgkJCQkJCQk8L3A+CgkJCQkJCQk8L2FydGljbGU+CgkJCSAgICAgICAgPGFydGljbGUgY2xhc3M9InRpbGUgaXMtY2hpbGQgYm94IiBpZD0iY2FyZDIiPgoJCQkgICAgICAgICAgPHAgY2xhc3M9InRpdGxlIj5FeHBlcmllbmNlPC9wPgoJCQkJCQkJCTxpbWcgc3JjPSIuL2Fzc2V0cy93aXJlZnJhbWUucG5nIiBhbHQ9IndpcmVmcmFtZSIgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZSwgZmxvYXQ6IHJpZ2h0LCB0b3A6IDAsIGhlaWdodDogMjAwcHgiPgoJCQkJCQkJCTxkaXYgY2xhc3M9Imhhcy10ZXh0LWNlbnRlcmVkIiBzdHlsZT0icGFkZGluZzogMTBweCI+PC9kaXY+CgkJCSAgICAgICAgICBJIGFtIGEgU2VuaW9yIGF0IHRoZSBVbml2ZXJzaXR5IG9mIENlbnRyYWwgRmxvcmlkYSBzdHVkeWluZyBJbnRlcmRpc2NpcGxpbmFyeSBTdHVkaWVzIGluIENvbXB1dGF0aW9uYWwgU2NpZW5jZSBhbmQgQ29tbWVyY2UsIHdpdGggYSBNaW5vciBpbiBOYXRpb25hbCBJbnRlbGxpZ2VuY2UgYW5kIFNlY3VyaXR5LiBJIGFtIGJlZ2lubmluZyB0byB3b3JrIGFzIGEgZnJlZWxhbmNlIHdlYiBkZXZlbG9wZXIsIGxvb2tpbmcgdG8gYnJpbmcgYnVzaW5lc3NlcyBhIGJlYXV0aWZ1bCwgY2xlYW4gd2Vic2l0ZSB0byByZWFjaCBtb3JlIGN1c3RvbWVycywgYW5kIGtlZXAgdGhlbS4gQ2hlY2sgb3V0IG15IHJlc3Vtw6kgb3Igc2VuZCBtZSBhbiBlbWFpbCBhbmQgbGV0J3MgdGFsayEKCQkJICAgICAgICA8L2FydGljbGU+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9InRpbGUgaXMtNiBpcy12ZXJ0aWNhbCBpcy1wYXJlbnQiPgoJCQkgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJ0aWxlIGlzLWNoaWxkIGJveCIgaWQ9ImNhcmQzIj4KCQkJICAgICAgICAgIDxwIGNsYXNzPSJ0aXRsZSI+TGFuZ3VhZ2VzPC9wPgoJCQkJCQkJCTxpbWcgc3JjPSIuL2Fzc2V0cy93ZWJfYXBwLnBuZyIgYWx0PSJ3ZWJBcHAiIHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmUsIHRvcDogMCwgaGVpZ2h0OiAyMDBweCwgZmxvYXQ6IHJpZ2h0Ij4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJoYXMtdGV4dC1jZW50ZXJlZCIgc3R5bGU9InBhZGRpbmc6IDEwcHgiPjwvZGl2PgoJCQkgICAgICAgICAgSFRNTCwgQ1NTLCBKYXZhU2NyaXB0LCBTd2lmdCwgQywgSmF2YSwgRGFydAoJCQkgICAgICAgIDwvYXJ0aWNsZT4KCQkJICAgICAgICA8YXJ0aWNsZSBjbGFzcz0idGlsZSBpcy1jaGlsZCBib3giIGlkPSJjYXJkNCI+CgkJCSAgICAgICAgICA8cCBjbGFzcz0idGl0bGUiPkRldmVsb3BtZW50IFRvb2xzPC9wPgoJCQkJCQkJCTxpbWcgc3JjPSIuL2Fzc2V0cy9kZXZlbG9wZXIucG5nIiBhbHQ9ImRldmVsb3BlciIgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZSwgdG9wOiAwLCBoZWlnaHQ6IDIwMHB4LCBmbG9hdDogcmlnaHQiPgoJCQkJCQkJCTxkaXYgY2xhc3M9Imhhcy10ZXh0LWNlbnRlcmVkIiBzdHlsZT0icGFkZGluZzogMTBweCI+PC9kaXY+CgkJCSAgICAgICAgICBBdG9tLCBHaXRIdWIsIE5vZGUsIEV4cHJlc3MsIEZpcmViYXNlLCBGbHV0dGVyLCBWaXN1YWwgU3R1ZGlvIENvZGUsIFRyYXZpcywgUmVhY3QsIFdvcmtpbmcgQ29weSAob24gaU9TKSwgWGNvZGUsIEJ1bG1hLCBUZXJtaW5hbAoJCQkgICAgICAgIDwvYXJ0aWNsZT4KCQkgICAgICAgIAk8L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgc3R5bGU9InBhZGRpbmc6IDQwcHgiPjwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJ0aWxlIGlzLWNoaWxkIj4KCQkJCQkJCTxhcnRpY2xlIGNsYXNzPSJ0aWxlIGlzLWNoaWxkIGNvbnRhaW5lciBib3giIGlkPSJjYXJkIj4KCQkJCQkJCTxwIGNsYXNzPSJ0aXRsZSI+UHJvamVjdHM8L3A+CgkJCQkJCQkJPGRpdiBjbGFzcz0iY29sdW1ucyBpcy1tdWx0aWxpbmUiPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbHVtbiI+PEhlbGxvV29ybGQgdGl0bGU9IlNub3djYXAgQ29mZmVlIiBsaW5rPSJodHRwczovL3Nub3djYXAtY29mZmVlLndlYi5hcHAiIGltZz0ic25vd2NhcC5wbmciPjwvSGVsbG9Xb3JsZD48L2Rpdj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0iY29sdW1uIj48SGVsbG9Xb3JsZCB0aXRsZT0iU2ltcGx5IEJvYmEiIGxpbms9Imh0dHBzOi8vc2ltcGx5LWJvYmEud2ViLmFwcCIgaW1nPSJzaW1wbHktc2MucG5nIiA+PC9IZWxsb1dvcmxkPjwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb2x1bW4iPjxIZWxsb1dvcmxkIHRpdGxlPSJUcmVrIE5vaXNlIiBsaW5rPSJodHRwczovL3RyZWstbm9pc2Uud2ViLmFwcCIgaW1nPSJ0cmVrbm9pc2UucG5nIj48L0hlbGxvV29ybGQ+PC9kaXY+CgkJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbHVtbiI+PEhlbGxvV29ybGQgdGl0bGU9IkRhaWx5IC0gVG8tRG8gQXBwIiBsaW5rPSJodHRwczovL3Nob3djYXNlLWRhaWx5LndlYi5hcHAiIGltZz0ic2hvd2Nhc2Utc2MucG5nIj48L0hlbGxvV29ybGQ+PC9kaXY+CgkJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbHVtbiI+PEhlbGxvV29ybGQgdGl0bGU9Ik11bmNoIC0gUmVzdGF1cmFudCBBcHAiIGxpbms9Imh0dHBzOi8vbXVuY2hzaG93Y2FzZS53ZWIuYXBwIiBpbWc9Im11bmNoLnBuZyI+PC9IZWxsb1dvcmxkPjwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb2x1bW4iPjxIZWxsb1dvcmxkIHRpdGxlPSJUb20gR2FtYWNoZSBCb29rcyIgbGluaz0iaHR0cHM6Ly90b21nYW1hY2hlYm9va3Mud2ViLmFwcCIgaW1nPSJ0Zy5wbmciPjwvSGVsbG9Xb3JsZD48L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCTwvYXJ0aWNsZT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgc3R5bGU9InBhZGRpbmc6IDV2aCI+PC9kaXY+CgkJCQkgPC9kaXY+CgkJCQkgPGRpdiBjbGFzcz0ic2VjdGlvbi1ib2R5Ij4KCQkJCQkgPGZvcm0gY2xhc3M9ImNvbnRhaW5lciBib3giIGFjdGlvbj0iaHR0cHM6Ly91c2ViYXNpbi5jb20vZi84ODY4OGU3MzhmZGMiIG1ldGhvZD0iUE9TVCI+CgkJCQkJIAk8ZGl2IGNsYXNzPSJ0aXRsZSI+CgkJCQkJIAkJV2FudCB0byB3b3JrIHRvZ2V0aGVyPwoJCQkJCSAJPC9kaXY+CgkJCQkJCSAgPGRpdiBjbGFzcz0iZmllbGQgaXMtaG9yaXpvbnRhbCI+CgkJCQkJCSAgPGRpdiBjbGFzcz0iZmllbGQtbGFiZWwgaXMtbm9ybWFsIj4KCQkJCQkJICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwiPkZyb208L2xhYmVsPgoJCQkJCQkgIDwvZGl2PgoJCQkJCQkgIDxkaXYgY2xhc3M9ImZpZWxkLWJvZHkiPgoJCQkJCQkgICAgPGRpdiBjbGFzcz0iZmllbGQiPgoJCQkJCQkgICAgICA8cCBjbGFzcz0iY29udHJvbCBpcy1leHBhbmRlZCBoYXMtaWNvbnMtbGVmdCI+CgkJCQkJCSAgICAgICAgPGlucHV0IGNsYXNzPSJpbnB1dCIgbmFtZT0ibmFtZSIgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9Ik5hbWUiIC8+CgkJCQkJCSAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gaXMtc21hbGwgaXMtbGVmdCI+CgkJCQkJCSAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdXNlciI+PC9pPgoJCQkJCQkgICAgICAgIDwvc3Bhbj4KCQkJCQkJICAgICAgPC9wPgoJCQkJCQkgICAgPC9kaXY+CgkJCQkJCSAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CgkJCQkJCSAgICAgIDxwIGNsYXNzPSJjb250cm9sIGlzLWV4cGFuZGVkIGhhcy1pY29ucy1sZWZ0IGhhcy1pY29ucy1yaWdodCI+CgkJCQkJCSAgICAgICAgPGlucHV0IGNsYXNzPSJpbnB1dCBpcy1saW5rIiB0eXBlPSJlbWFpbCIgbmFtZT0iZW1haWwiIHBsYWNlaG9sZGVyPSJFbWFpbCIgLz4KCQkJCQkJICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiBpcy1zbWFsbCBpcy1sZWZ0Ij4KCQkJCQkJICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1lbnZlbG9wZSI+PC9pPgoJCQkJCQkgICAgICAgIDwvc3Bhbj4KCQkJCQkJICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiBpcy1zbWFsbCBpcy1yaWdodCI+CgkJCQkJCSAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY2hlY2siPjwvaT4KCQkJCQkJICAgICAgICA8L3NwYW4+CgkJCQkJCSAgICAgIDwvcD4KCQkJCQkJICAgIDwvZGl2PgoJCQkJCQkgIDwvZGl2PgoJCQkJCQk8L2Rpdj4KCgkJCQkJCTxkaXYgY2xhc3M9ImZpZWxkIGlzLWhvcml6b250YWwiPgoJCQkJCQkgIDxkaXYgY2xhc3M9ImZpZWxkLWxhYmVsIGlzLW5vcm1hbCI+CgkJCQkJCSAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIj5TdWJqZWN0PC9sYWJlbD4KCQkJCQkJICA8L2Rpdj4KCQkJCQkJICA8ZGl2IGNsYXNzPSJmaWVsZC1ib2R5Ij4KCQkJCQkJICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KCQkJCQkJICAgICAgPGRpdiBjbGFzcz0iY29udHJvbCI+CgkJCQkJCSAgICAgICAgPGlucHV0IGNsYXNzPSJpbnB1dCAiIHR5cGU9InRleHQiIG5hbWU9InN1YmplY3QiIHBsYWNlaG9sZGVyPSJlLmcuIFdlYnNpdGUgUmVkZXNpZ24gUmVxdWVzdCIgLz4KCQkJCQkJICAgICAgPC9kaXY+CgkJCQkJCSAgICA8L2Rpdj4KCQkJCQkJICA8L2Rpdj4KCQkJCQkJPC9kaXY+CgoJCQkJCQk8ZGl2IGNsYXNzPSJmaWVsZCBpcy1ob3Jpem9udGFsIj4KCQkJCQkJICA8ZGl2IGNsYXNzPSJmaWVsZC1sYWJlbCBpcy1ub3JtYWwiPgoJCQkJCQkgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCI+TWVzc2FnZTwvbGFiZWw+CgkJCQkJCSAgPC9kaXY+CgkJCQkJCSAgPGRpdiBjbGFzcz0iZmllbGQtYm9keSI+CgkJCQkJCSAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CgkJCQkJCSAgICAgIDxkaXYgY2xhc3M9ImNvbnRyb2wiPgoJCQkJCQkgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0idGV4dGFyZWEiIG5hbWU9Im1lc3NhZ2UiIHBsYWNlaG9sZGVyPSJFeHBsYWluIGhvdyB3ZSBjYW4gaGVscCB5b3UiPjwvdGV4dGFyZWE+CgkJCQkJCQkJCQk8cCBjbGFzcz0iaGVscCI+CgkJCQkJCQkgICAgICAgICpUaGlzIGZpZWxkIGlzIHJlcXVpcmVkCgkJCQkJCQkgICAgICA8L3A+CgkJCQkJCSAgICAgIDwvZGl2PgoJCQkJCQkgICAgPC9kaXY+CgkJCQkJCSAgPC9kaXY+CgkJCQkJCTwvZGl2PgoKCQkJCQkJPGRpdiBjbGFzcz0iZmllbGQgaXMtaG9yaXpvbnRhbCI+CgkJCQkJCSAgPGRpdiBjbGFzcz0iZmllbGQtbGFiZWwiPgoJCQkJCQkgIDwvZGl2PgoJCQkJCQkgIDxkaXYgY2xhc3M9ImZpZWxkLWJvZHkiPgoJCQkJCQkgICAgPGRpdiBjbGFzcz0iZmllbGQiPgoJCQkJCQkgICAgICA8ZGl2IGNsYXNzPSJjb250cm9sIj4KCQkJCQkJICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ1dHRvbiBpcy1saW5rIj4KCQkJCQkJICAgICAgICAgIFNlbmQgbWVzc2FnZQoJCQkJCQkgICAgICAgIDwvYnV0dG9uPgoJCQkJCQkgICAgICA8L2Rpdj4KCQkJCQkJICAgIDwvZGl2PgoJCQkJCQkgIDwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQkgPC9mb3JtPgoJCQkJPC9kaXY+CgkJCQk8ZGl2IHN0eWxlPSJoZWlnaHQ6IDEwdmgiPjwvZGl2PgoJCQkgICA8Zm9vdGVyIGNsYXNzPSJoZXJvLWZvb3QiPgoJCQkgICAgPGRpdiBjbGFzcz0iY29udGVudCBoYXMtdGV4dC1jZW50ZXJlZCI+CgkJCSAgICAgTWFkZSB3aXRoIDxpIGNsYXNzPSJmYSBmYS1oZWFydCIgc3R5bGU9ImNvbG9yOiByZ2IoMjM1LCA0MywgODYpIj48L2k+ICYgPGkgY2xhc3M9ImZhIGZhLWNvZmZlZSIgc3R5bGU9ImNvbG9yOiByZ2IoNDQsIDMxLCAyMikiPjwvaT4gaW4gT3JsYW5kbwoJCQkgICAgPGRpdiBjbGFzcz0iIGNvbnRlbnQgaGFzLXRleHQtY2VudGVyZWQiPgoJCQkgICAgICA8YSBocmVmPSJodHRwczovL2J1bG1hLmlvIj4KCQkJICAgICAgPGltZyBzcmM9Imh0dHBzOi8vYnVsbWEuaW8vaW1hZ2VzL21hZGUtd2l0aC1idWxtYS0tYmxhY2sucG5nIiBhbHQ9Ik1hZGUgd2l0aCBCdWxtYSIgd2lkdGg9IjEyOCIgaGVpZ2h0PSIyNCIgLz4KCQkJICAgICAgPC9hPgoJCQkgICAgPC9kaXY+CgkJCQkJPC9kaXY+CgkJCSAgIDwvZm9vdGVyPgoJCQkgIDwvc2VjdGlvbj4KCQkJPC9kaXY+CiAgPC9kaXY+Cg=="},null]}